This is a conversion library and proxy PortableContacts server for sites that
don't support the PortableContacts format and API themselves. It currently has
implementations for Facebook and Twitter, served at these endpoints:

http://facebook-poco.appspot.com/
http://twitter-poco.appspot.com/

Feel free to add more!

Background on PortableContacts:
http://portablecontacts.net/
http://wiki.portablecontacts.net/

Test client and validator:
http://www.plaxo.com/pdata/testClient

Source: https://github.com/snarfed/portablecontacts-unofficial
Contact: Ryan Barrett <portablecontacts@ryanb.org>
License: This project is placed in the public domain.

Twitter and Facebook support OAuth, which you'll need to use for users who don't
make their data public. If you obtain an OAuth access token from Twitter or
Facebook and include it in a request to this provider, it will be used to sign
and authorize the underlying requests to those providers. See the demos on
https://facebook-poco.appspot.com/ and https://twitter-poco.appspot.com/ for
examples.

I wish there was a Python server library for any of the components here,
e.g. XRD/XRDS-Simple! I only found client libraries though:
http://mrtopf.de/blog/data-portability/announcing-pydataportability-01-technical/
https://github.com/gwachob/pydiscovery

To use this in a PortableContacts client, you'll need to hard-code exceptions
for the facebook.com and twitter.com hosts and redirect PortableContacts HTTP
requests to the corresponding endpoint above.

Note the app.yaml.* files, one for each App Engine app id. To work on or deploy
a specific app id, symlink app.yaml to its app.yaml.xxx file. Likewise, if you
add a new site, you'll need to add a corresponding app.yaml.xxx file.

The tests require the App Engine SDK and python-mox.

Deploy commands:
rm -f app.yaml && ln -s app.yaml.twitter app.yaml && \
  ~/google_appengine/appcfg.py --oauth2 update . && \
rm -f app.yaml && ln -s app.yaml.facebook app.yaml && \
  ~/google_appengine/appcfg.py --oauth2 update .


TODO: tweaks to comply with Facebook's TOS:

- can't use user ids; switch to User.third_party_id
https://developers.facebook.com/policy/#data
https://developers.facebook.com/docs/reference/api/user/

- can only use friend connections if *both* users have opted into app:
https://developers.facebook.com/policy/#data

